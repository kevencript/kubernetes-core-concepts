apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-http-app
  labels:
    app: go-http-app
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      tier: backend
  template:
    metadata:
      labels:
        tier: backend
    spec: 
      containers:
        - name: go-http-app
          image: wesleywillians/hello-go:v5.4 # Probe on port /healthz (+ readiness check: if app is up < 10s it will fail. This way, readiness will only be "ready" when the pod is healthy)
          # livenessProbe:
          #   httpGet: # HTTP strategy (or container command or tcp connection)
          #     path: /healthz # Created on Go server (docker image)
          #     port: 8000 # Should be the CONTAINER port
          #   periodSeconds: 5 # Liveness check frequecy
          #   failureThreshold: 1 # How many times must to fail until be consider as failed
          #   timeoutSeconds: 1 # How long the liveness req can wait untill timeout 
          #   successThreshold: 1 # How many times must to success until be consider as health
          
          readinessProbe:
            httpGet: # HTTP strategy (or container command or tcp connection)
              path: /healthz # Created on Go server (docker image)
              port: 8000 # Should be the CONTAINER port
            periodSeconds: 3 # Readiness check frequecy
            failureThreshold: 1 # How many times must to fail until be consider as failed
            timeoutSeconds: 1 # How long the liveness req can wait untill timeout 
            successThreshold: 1 # How many times must to success until be consider as health
            initialDelaySeconds: 8 # How much time it will wait untill start to check (In our example, the app takes 10s to start)

          envFrom:
            - configMapRef:
                name: go-http-app-env
            - secretRef:
                name: secret-app
          volumeMounts:
            - mountPath: "/go/myfamily"
              name: file-injection
      volumes:
        - name: file-injection
          configMap:
            name: configmap-app-injection
            items:
              - key: config
                path: family.txt
